cov <- read.table("covid19.csv", sep=",",header=TRUE)
# cov$CMODateCount
for (K in 1:5) {
par = integer(K+1)
theta = optim(par=par, loglike, method="BFGS", y=cov$CMODateCount)
n0 = theta$par[1]
beta = theta$par[2:length(theta$par)]
t = seq(-1, 1, length.out=length(cov$CMODateCount))
with(cov,plot(1:41,cov$CMODateCount))
e = exp(n0)
for (i in seq_along(beta)) {
e = e * exp(beta[i] * t^i)
}
lines(1:length(cov$CMODateCount), e, col="red")
print(AIC(length(par), theta$value))
}
N = function(t, n0, beta) {
val = exp(n0)
for (i in seq_along(beta)) {
val = val * exp(beta[i]*t^i)
}
val
}
llik = function(y, theta) {
n0 = theta[1]
beta = theta[2:length(theta)]
n = length(y)
ll = 0
t = seq(-1, 1, length.out=n)
for (i in seq_along(t)) {
ll = ll + y[i] * log(N(t[i], n0, beta)) - N(t[i], n0, beta)
}
-ll
}
loglike = function(y, theta) {
n0 = theta[1]
beta = theta[2:length(theta)]
n = length(y)
t = seq(-1, 1, length.out=n)
ll <-sum(dpois(y, N(t, n0, beta), log=TRUE))
-ll
}
K = 1
par = integer(K+1)
# theta = optim(par=par, loglike, method="BFGS", y=cov$CMODateCount)
# n0 = theta$par[1]
# beta = theta$par[2:length(theta$par)]
#
#
# n0
# beta
cov <- read.table("covid19.csv", sep=",",header=TRUE)
# cov$CMODateCount
for (K in 1:5) {
par = integer(K+1)
theta = optim(par=par, loglike, method="BFGS", y=cov$CMODateCount)
n0 = theta$par[1]
beta = theta$par[2:length(theta$par)]
t = seq(-1, 1, length.out=length(cov$CMODateCount))
with(cov,plot(1:41,cov$CMODateCount))
e = exp(n0)
for (i in seq_along(beta)) {
e = e * exp(beta[i] * t^i)
}
lines(1:length(cov$CMODateCount), e, col="red")
print(AIC(length(par), theta$value))
}
cov <- read.table("covid19.csv", sep=",",header=TRUE)
# cov$CMODateCount
for (K in 1:5) {
par = integer(K+1)
theta = optim(par=par, loglike, method="BFGS", y=cov$CMODateCount)
n0 = theta$par[1]
beta = theta$par[2:length(theta$par)]
t = seq(-1, 1, length.out=length(cov$CMODateCount))
with(cov,plot(1:41,cov$CMODateCount))
e = exp(n0)
for (i in seq_along(beta)) {
e = e * exp(beta[i] * t^i)
}
lines(1:length(cov$CMODateCount), e, col="red")
print(AIC(length(par), theta$value))
}
cov <- read.table("covid19.csv", sep=",",header=TRUE)
# cov$CMODateCount
for (K in 1:5) {
par = integer(K+1)
theta = optim(par=par, loglike, method="BFGS", y=cov$CMODateCount)
n0 = theta$par[1]
beta = theta$par[2:length(theta$par)]
t = seq(-1, 1, length.out=length(cov$CMODateCount))
with(cov,plot(1:41,cov$CMODateCount))
e = exp(n0)
for (i in seq_along(beta)) {
e = e * exp(beta[i] * t^i)
}
lines(1:length(cov$CMODateCount), e, col="red")
print(AIC(length(par), theta$value))
}
cov <- read.table("covid19.csv", sep=",",header=TRUE)
# cov$CMODateCount #
# the simple model that allows for departure from unbounded exponential growth
N = function(t, n0, beta) {
val = exp(n0)
for (i in seq_along(beta)) {
val = val * exp(beta[i]*t^i)
}
val
}
### Question 1 ###
# evaluates the negative log likelihood of the model
neg_loglike = function(y, theta) {
n0 = theta[1]
beta = theta[2:length(theta)]
n = length(y)
t = seq(-1, 1, length.out=n) # run from -1 to 1 so model is invariant to units that time is measure in so it doesn't matter if time is measure in seconds, days, or months.
ll <-sum(dpois(y, N(t, n0, beta), log=TRUE))
-ll
}
# function to work out AIC
AIC = function(num_par, val_ll) {
2*val_ll + 2 * num_par # note that its not -2*val_ll since val_ll is already negative
}
### Question 2 ###
# fits models with values from 1 to 5, finds the MLE for theta, finds AIC
for (K in 1:5) {
par = integer(K+1)
#finds MLE for theta? does it? &&&&&&&&&&
theta = optim(par=par, neg_loglike, method="BFGS", y=cov$CMODateCount)
n0 = theta$par[1]
beta = theta$par[2:length(theta$par)]
t = seq(-1, 1, length.out=length(cov$CMODateCount))
with(cov,plot(1:41,cov$CMODateCount, main = "Number of new cases per day from 31/01/2020 to 11/03/2020",xlab = "Day No.", ylab = "Number of new cases"))
e = exp(n0)
for (i in seq_along(beta)) {
e = e * exp(beta[i] * t^i)
}
lines(1:length(cov$CMODateCount), e, col="red")
legend("topleft", legend=paste("Model when K value = ", K), col="red", lty=1:2, cex=0.8)
aic <- AIC(length(par), theta$value)
cat("AIC for K =", K, "is: ", aic, "\n")
}
cov <- read.table("covid19.csv", sep=",",header=TRUE)
# cov$CMODateCount #
# the simple model that allows for departure from unbounded exponential growth
N = function(t, n0, beta) {
val = exp(n0)
for (i in seq_along(beta)) {
val = val * exp(beta[i]*t^i)
}
val
}
### Question 1 ###
# evaluates the negative log likelihood of the model
neg_loglike = function(y, theta) {
n0 = theta[1]
beta = theta[2:length(theta)]
n = length(y)
t = seq(-1, 1, length.out=n) # run from -1 to 1 so model is invariant to units that time is measure in so it doesn't matter if time is measure in seconds, days, or months.
ll <-sum(dpois(y, N(t, n0, beta), log=TRUE))
-ll
}
# function to work out AIC
AIC = function(num_par, val_ll) {
2*val_ll + 2 * num_par # note that its not -2*val_ll since val_ll is already negative
}
### Question 2 ###
# fits models with values from 1 to 5, finds the MLE for theta, finds AIC
for (K in 1:5) {
par = integer(K+1)
#finds MLE for theta? does it? &&&&&&&&&&
theta = optim(par=par, neg_loglike, method="BFGS", y=cov$CMODateCount)
n0 = theta$par[1]
beta = theta$par[2:length(theta$par)]
t = seq(-1, 1, length.out=length(cov$CMODateCount))
with(cov,plot(1:41,cov$CMODateCount, main = "Number of new cases per day from 31/01/2020 to 11/03/2020",xlab = "Day No.", ylab = "Number of new cases"))
e = exp(n0)
for (i in seq_along(beta)) {
e = e * exp(beta[i] * t^i)
}
lines(1:length(cov$CMODateCount), e, col="red")
legend("topleft", legend=paste("Model when K value = ", K), col="red", lty=1:2, cex=0.8)
aic <- AIC(length(par), theta$value)
cat("AIC for K =", K, "is:", aic, "\n")
}
